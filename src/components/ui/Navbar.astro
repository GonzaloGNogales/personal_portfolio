---
import { social, template, profile } from '@/settings'
import SocialIcons from './SocialIcons.astro'

// Get current path for active state
const currentPath = Astro.url.pathname;
---

<nav class='navbar fixed top-0 left-0 right-0 z-50 bg-base-100' style="background-color: #f8f9fa; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
	<div class='flex-1 pl-8'>
		<a href='#top' class='text-2xl font-bold gradient-text home-link'>{profile.fullName}</a>
	</div>
	
	<div class='flex-1 flex justify-center absolute left-1/2 transform -translate-x-1/2'>
		<ul class='menu menu-horizontal px-1'>
			<li><a href='#top' class='text-lg nav-link home-link'>Home</a></li>
			<li><a href='#publications' class='text-lg nav-link publications-link'>Publications</a></li>
		</ul>
	</div>

	<div class='flex-none flex items-center gap-4'>
		<SocialIcons />
	</div>
</nav>

<!-- Add a spacer div to prevent content from hiding behind the fixed navbar -->
<div class="h-16"></div>

<script>
	// Improved smooth scrolling for both home and publications links
	function setupSmoothScroll() {
		const homeLinks = document.querySelectorAll('.home-link');
		const publicationsLink = document.querySelector('.publications-link');
		
		// Setup all home links (name and home button)
		homeLinks.forEach(homeLink => {
			// Remove any existing event listeners to prevent duplicates
			homeLink.removeEventListener('click', handleHomeClick);
			homeLink.addEventListener('click', handleHomeClick);
		});
		
		if (publicationsLink) {
			// Remove any existing event listeners to prevent duplicates
			publicationsLink.removeEventListener('click', handlePublicationsClick);
			publicationsLink.addEventListener('click', handlePublicationsClick);
		}
	}

	function handleHomeClick(e) {
		e.preventDefault();
		
		// Smooth scroll to top of the page
		window.scrollTo({
			top: 0,
			behavior: 'smooth'
		});
	}

	function handlePublicationsClick(e) {
		e.preventDefault();
		
		const publicationsSection = document.getElementById('publications');
		if (publicationsSection) {
			// Calculate the offset to account for the fixed navbar
			const navbarHeight = 64; // 4rem = 64px
			const elementTop = publicationsSection.offsetTop - navbarHeight;
			
			window.scrollTo({
				top: elementTop,
				behavior: 'smooth'
			});
		}
	}

	// Setup on DOM content loaded
	document.addEventListener('DOMContentLoaded', setupSmoothScroll);
	
	// Also setup when the page is fully loaded (for better reliability)
	window.addEventListener('load', setupSmoothScroll);
	
	// Setup on every navigation (for Astro's client-side routing)
	document.addEventListener('astro:page-load', setupSmoothScroll);
</script>

<style>
	.gradient-text {
		background: linear-gradient(
			to right,
			#ff6b6b,
			#4ecdc4,
			#45b7d1,
			#96c93d,
			#ff6b6b
		);
		background-size: 200% auto;
		color: transparent;
		background-clip: text;
		-webkit-background-clip: text;
		animation: gradient 8s linear infinite;
		text-shadow: 0 0 10px rgba(255, 255, 255, 0.1);
	}

	@keyframes gradient {
		0% {
			background-position: 0% center;
		}
		100% {
			background-position: 200% center;
		}
	}

	/* Navigation link styles */
	.nav-link {
		position: relative;
		transition: all 0.3s ease;
		padding: 0.5rem 1rem;
		border-radius: 0.5rem;
		overflow: hidden;
		background: transparent !important;
		color: #000000 !important;
	}

	.nav-link::before {
		content: '';
		position: absolute;
		bottom: 0;
		left: 0;
		width: 100%;
		height: 2px;
		background: linear-gradient(
			to right,
			#ff6b6b,
			#4ecdc4,
			#45b7d1,
			#96c93d
		);
		transform: scaleX(0);
		transform-origin: right;
		transition: transform 0.3s ease;
	}

	.nav-link:hover {
		background: transparent !important;
		transform: translateY(-2px);
		text-shadow: 0 0 8px rgba(0, 0, 0, 0.2);
	}

	.nav-link:hover::before {
		transform: scaleX(1);
		transform-origin: left;
	}

	/* Click effect */
	.nav-link:active {
		transform: scale(0.85);
		background: transparent !important;
		transition: all 0.05s ease;
	}

	.ripple {
		display: none;
	}
</style>
